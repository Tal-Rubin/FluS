driver 
-pre-processor:
--mesh (computational geometry)
	inputs: dimensionality (1D/2D), geometry ("square torus", think how to make this flexible)
			,coarse / fine meshing 
	outputs: mesh object ((structured) - cubic meshes)
--model/solver selection (advection, burgers, euler)
--dynamic variable (element x fields x (subfields))

--initial condition setter (manual, read from file)
		dynamic variable containing initial conditions
		boundary conditions


-solver


-post-proc

Implement IC functionality:

Dynamic_variable should have access to a coefficient of a field
IC should have a fill field (to DG order) with initial data
two const states, gaussian, indicator (f(x) = a, x \in (a,b), f(x) = 0 otherwise)


Mesh should have elements with pointers to nodes, rather than only have their number

Change all classes to have private attributes, and access through an access functions rather than using a const class instance or const variable
(except the dynamic variable data_)

dynamic variable should be initilized as :
Dynamic_Variable state (mesh.get_num_elements(ghost = true), model.get_state_size()); 


